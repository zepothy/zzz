{"version":3,"sources":["components/Jumbotron.js","components/Beans.js","constants.js","components/Sundial.js","components/Upgrade.js","App.js","serviceWorker.js","index.js"],"names":["Jumbotron","props","features","coins","quality","avgQuality","Math","trunc","className","toFixed","Beans","code","spaghetti","showQuality","interns","featureQuality","GRADIENT_STYLE","percent","SUNDIAL_STATES","ZZZ","FLOW","Sundial","Upgrade","title","cost","redeemUpgrade","onClick","App","useState","setFeatures","setQuality","setCoins","setCode","spaghet","setSpaghet","refactor","setRefactor","redeemed","setRedeemed","available","setAvailable","setShowQuality","UPGRADES","isReady","action","useEffect","total","min","document","getElementsByClassName","style","background","c","handleFeatureCompletion","forEach","upgrade","id","state","el","values","window","getComputedStyle","getPropertyValue","split","pos","round","atan2","PI","getSundialState","Object","entries","reduce","res","concat","key","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.eab64599.chunk.js","sourcesContent":["import React from 'react';\n\n// Displays the number of widgets delivered & wtc.\nfunction Jumbotron(props) {\n\tconst { features, coins, quality } = props;\n\tconst avgQuality = features === 0 ? 100 : Math.trunc(quality / features);\n\n\treturn (\n\t\t<div className=\"Jumbotron\">\n\t\t\t<span>\n\t\t\t\t{features} feature{features !== 1 && 's'} delivered\n\t\t\t</span>\n\t\t\t<span>\n\t\t\t\tavg quality: {avgQuality}%\n\t\t\t</span>\n\t\t\t<span>\n\t\t\t\t{coins.toFixed(2)} wtc\n\t\t\t</span>\n\t\t</div>\n\t);\n}\n\nexport default Jumbotron;\n","import React from 'react';\n\n// Displays values that are counted.\nfunction Beans(props) {\n\tconst { code, spaghetti, showQuality, interns } = props;\n\tconst featureQuality = Math.trunc(code ? code / (code + spaghetti) * 100 : 0);\n\n\treturn (\n\t\t<div className=\"Beans\">\n\t\t\t<div className=\"progress-bar\" />\n\t\t\t<div>{code} lines of code</div>\n\t\t\t<div>{spaghetti} lines of spaghetti</div>\n\t\t\t{showQuality && <div>quality: {featureQuality}%</div>}\n      {!!interns && <div>{interns} interns interning</div>}\n\t\t</div>\n\t);\n}\n\nexport default Beans;\n","export const FEATURE_COINS = 0.1;\nexport const FEATURE_LINES = 150;\nexport const FEATURE_QUALITY = 70;\nexport const GRADIENT_STYLE = percent =>\n\t`linear-gradient(to right, orange ${percent * 100}%, #0000000d ${percent * 100}%)`;\nexport const REFACTOR_CLICKS = 3;\nexport const SPAGETTI_VALUE = 0.5;\nexport const SUBPAR_MULTIPLIER = 0.8;\nexport const SUNDIAL_STATES = {\n\tZZZ: [ [ 1, 1 ], [ 2, 1 ] ], // [code, spaghet]\n\tFLOW: [ 2, 0 ],\n};\n","import React from 'react';\nimport * as c from '../constants.js';\n\n// Displays the time of day.\nexport function Sundial() {\n\treturn (\n\t\t<div className=\"Sundial\">\n\t\t\t<div className=\"Hand-container\">\n\t\t\t\t<div className=\"Hand\" />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\n// State is based on angle of the sundial hand.\nexport function getSundialState(upgrade) {\n\t// yucky\n\tconst el = document.getElementsByClassName('Hand-container')[0];\n\tconst tr = window.getComputedStyle(el, null).getPropertyValue('transform');\n\tconst values = tr.split('(')[1].split(')')[0].split(',');\n\tconst pos = Math.round(Math.atan2(values[1], values[0]) * (180 / Math.PI));\n\n\treturn pos >= 90 && pos <= 180\n\t\t? c.SUNDIAL_STATES.FLOW\n\t\t: c.SUNDIAL_STATES.ZZZ[upgrade ? 1 : 0]; // upgrade id: 0\n}\n","import React from 'react';\n\n// Displays a singular upgrade\nconst Upgrade = props => {\n\tconst { title, cost, redeemUpgrade } = props;\n  \n\treturn (\n\t\t<div className=\"button Upgrade\" onClick={redeemUpgrade}>\n\t\t\t<b>{title}</b><br />\n\t\t\t{cost}\n\t\t</div>\n\t);\n};\n\nexport default Upgrade;\n","import React, { useState, useEffect } from 'react';\n\nimport Jumbotron from './components/Jumbotron';\nimport Beans from './components/Beans';\nimport { Sundial, getSundialState } from './components/Sundial';\nimport Upgrade from './components/Upgrade';\n\nimport * as c from './constants.js';\nimport './styles.css';\n\n// 'Tis the... ahhh come si dice... il assembler of components. todo: reorganize\nfunction App(props) {\n\tconst [ features, setFeatures ] = useState(0);\n\tconst [ quality, setQuality ] = useState(0);\n\tconst [ coins, setCoins ] = useState(0.0);\n\tconst [ code, setCode ] = useState(0);\n\tconst [ spaghet, setSpaghet ] = useState(0);\n\tconst [ refactor, setRefactor ] = useState(0);\n\tconst [ interns, setInterns ] = useState(0);\n\n\t// Upgrades\n\tconst [ redeemed, setRedeemed ] = useState({});\n\tconst [ available, setAvailable ] = useState({});\n\tconst [ showQuality, setShowQuality ] = useState(false); // id: 0\n\tconst UPGRADES = [\n\t\t{\n\t\t\ttitle: 'Show code to spagetti ratio',\n\t\t\tcost: '100 lines of code',\n\t\t\tisReady: () => code >= 100,\n\t\t\taction: () => setShowQuality(true),\n\t\t},\n\t\t{\n\t\t\ttitle: 'Install linter',\n\t\t\tcost: '1 featured delivered',\n\t\t\tisReady: () => features >= 1,\n\t\t},\n\t\t{\n\t\t\ttitle: 'Hire an intern',\n\t\t\tcost: '.1 wtc',\n\t\t\tisReady: () => quality >= 105 && code >= 30,\n\t\t\taction: () => {},\n\t\t},\n\t];\n\n\t// Executes action function affiliated with upgrade\n\tconst redeemUpgrade = id => {\n\t\tUPGRADES[id].action && UPGRADES[id].action();\n\t\tsetAvailable({ ...available, [id]: false });\n\t\tsetRedeemed({ ...redeemed, [id]: true });\n\t};\n\n\t// Check which upgrades are ready for release!!!\n\tconst releaseUpgrades = () => {\n\t\tUPGRADES.forEach(\n\t\t\t(upgrade, id) =>\n\t\t\t\t!redeemed[`${id}`] &&\n\t\t\t\tupgrade.isReady() &&\n\t\t\t\tsetAvailable({ ...available, [id]: true })\n\t\t);\n\t};\n\n\t// Beef\n\tconst handleFeatureCompletion = () => {\n\t\tconst featureQuality = code / (code + spaghet) * 100;\n\t\tsetFeatures(features + 1);\n\t\tsetQuality(quality + featureQuality);\n\t\tsetCoins(\n\t\t\tcoins +\n\t\t\t\tc.FEATURE_COINS * (featureQuality >= c.FEATURE_QUALITY ? 1 : c.SUBPAR_MULTIPLIER)\n\t\t);\n\t\tsetCode(0);\n\t\tsetSpaghet(0);\n\t};\n\n\t// All of the above! + update progress bar\n\tuseEffect(\n\t\t() => {\n\t\t\tconst total = Math.min(c.FEATURE_LINES, code + spaghet * c.SPAGETTI_VALUE);\n\t\t\tconst progress = document.getElementsByClassName('progress-bar')[0];\n\t\t\tprogress.style.background = c.GRADIENT_STYLE(total / c.FEATURE_LINES);\n\t\t\ttotal === c.FEATURE_LINES && handleFeatureCompletion();\n\t\t\treleaseUpgrades();\n\t\t},\n\t\t[ code ]\n\t);\n\n\t// Bizzzness logic for updating values on write\n\tconst handleWrite = () => {\n\t\tconst state = getSundialState(redeemed[1]);\n\t\tsetCode(code + state[0]);\n\t\tsetSpaghet(spaghet + state[1]);\n\t};\n\n\t// Bizzzness logic for updating values on refactor\n\tconst handleRefactor = () => {\n\t\tif (spaghet === 0) return;\n\t\tif (refactor >= c.REFACTOR_CLICKS) {\n\t\t\tsetRefactor(0);\n\t\t\tspaghet > 0 && (setSpaghet(spaghet - 1) || setCode(code + 1));\n\t\t} else {\n\t\t\tsetRefactor(refactor + 1);\n\t\t\tconst button = document.getElementsByClassName('refactor')[0];\n\t\t\tbutton.style.background = c.GRADIENT_STYLE(refactor / c.REFACTOR_CLICKS);\n\t\t}\n\t};\n\n\t// The game in the flesh, yes\n\treturn (\n\t\t<div className=\"App vert-center\">\n\t\t\t<h3>cleeker co.</h3>\n\t\t\t<div className=\"card\">\n\t\t\t\t<Jumbotron features={features} coins={coins} quality={quality} />\n\t\t\t\t<div className=\"flex\">\n\n\t\t\t\t\t{/* Left side */}\n\t\t\t\t\t<div className=\"vert-center\">\n\t\t\t\t\t\t<Sundial />\n\t\t\t\t\t\t<div className=\"flex\">\n\t\t\t\t\t\t\t<div className=\"button\" onClick={handleWrite}>write</div>\n\t\t\t\t\t\t\t<div className=\"button refactor\" onClick={handleRefactor}>refactor</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{/* Right side */}\n\t\t\t\t\t<div className=\"Beans-container\">\n\t\t\t\t\t\t<Beans\n\t\t\t\t\t\t\tcode={code}\n\t\t\t\t\t\t\tspaghetti={spaghet}\n\t\t\t\t\t\t\tshowQuality={showQuality}\n\t\t\t\t\t\t\tinterns={interns}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div className=\"Upgrade-container\">\n\t\t\t\t\t\t\t{Object.entries(available).reduce((res, upgrade) => {\n\t\t\t\t\t\t\t\treturn !!upgrade[1]\n\t\t\t\t\t\t\t\t\t? res.concat(\n\t\t\t\t\t\t\t\t\t\t\t<Upgrade\n\t\t\t\t\t\t\t\t\t\t\t\tkey={`upg-${upgrade[0]}`}\n\t\t\t\t\t\t\t\t\t\t\t\ttitle={UPGRADES[upgrade[0]].title}\n\t\t\t\t\t\t\t\t\t\t\t\tcost={UPGRADES[upgrade[0]].cost}\n\t\t\t\t\t\t\t\t\t\t\t\tredeemUpgrade={() => redeemUpgrade(upgrade[0])}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t: res;\n\t\t\t\t\t\t\t}, [])}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}